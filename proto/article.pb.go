// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article.proto

/*
Package article is a generated protocol buffer package.

It is generated from these files:
	article.proto

It has these top-level messages:
	Article
	ArticleListRequest
	ArticleListResponse
*/
package article

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Article struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,4,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *Article) Reset()                    { *m = Article{} }
func (m *Article) String() string            { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()               {}
func (*Article) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Article) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Article) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type ArticleListRequest struct {
	Page     int32 `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Pagesize int32 `protobuf:"varint,2,opt,name=pagesize" json:"pagesize,omitempty"`
}

func (m *ArticleListRequest) Reset()                    { *m = ArticleListRequest{} }
func (m *ArticleListRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleListRequest) ProtoMessage()               {}
func (*ArticleListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ArticleListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ArticleListRequest) GetPagesize() int32 {
	if m != nil {
		return m.Pagesize
	}
	return 0
}

type ArticleListResponse struct {
	Article []*Article `protobuf:"bytes,4,rep,name=article" json:"article,omitempty"`
}

func (m *ArticleListResponse) Reset()                    { *m = ArticleListResponse{} }
func (m *ArticleListResponse) String() string            { return proto.CompactTextString(m) }
func (*ArticleListResponse) ProtoMessage()               {}
func (*ArticleListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ArticleListResponse) GetArticle() []*Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func init() {
	proto.RegisterType((*Article)(nil), "Article")
	proto.RegisterType((*ArticleListRequest)(nil), "ArticleListRequest")
	proto.RegisterType((*ArticleListResponse)(nil), "ArticleListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ArticleService service

type ArticleServiceClient interface {
	ArticleList(ctx context.Context, in *ArticleListRequest, opts ...client.CallOption) (*ArticleListResponse, error)
}

type articleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewArticleServiceClient(serviceName string, c client.Client) ArticleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "articleservice"
	}
	return &articleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *articleServiceClient) ArticleList(ctx context.Context, in *ArticleListRequest, opts ...client.CallOption) (*ArticleListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ArticleService.ArticleList", in)
	out := new(ArticleListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ArticleService service

type ArticleServiceHandler interface {
	ArticleList(context.Context, *ArticleListRequest, *ArticleListResponse) error
}

func RegisterArticleServiceHandler(s server.Server, hdlr ArticleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ArticleService{hdlr}, opts...))
}

type ArticleService struct {
	ArticleServiceHandler
}

func (h *ArticleService) ArticleList(ctx context.Context, in *ArticleListRequest, out *ArticleListResponse) error {
	return h.ArticleServiceHandler.ArticleList(ctx, in, out)
}

func init() { proto.RegisterFile("article.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0x9a, 0xd0, 0xf6, 0x22, 0x3a, 0x5c, 0x3b, 0x58, 0x15, 0x43, 0xe4, 0x29, 0x53,
	0x86, 0x32, 0xc1, 0x56, 0x89, 0xb1, 0x93, 0xf9, 0x05, 0x21, 0x3e, 0xa1, 0x93, 0xaa, 0xda, 0xd8,
	0x07, 0x03, 0xbf, 0x1e, 0xe1, 0x18, 0x28, 0xa2, 0x93, 0x7d, 0xdf, 0xb3, 0xde, 0x7b, 0x3e, 0xb8,
	0x19, 0x82, 0xf0, 0x78, 0xa4, 0xde, 0x07, 0x27, 0x4e, 0x3b, 0x98, 0xef, 0x27, 0x80, 0x2b, 0x28,
	0xd9, 0xaa, 0xa2, 0x2d, 0xba, 0xda, 0x94, 0x6c, 0x71, 0x03, 0xb5, 0xb0, 0x1c, 0x49, 0x95, 0x6d,
	0xd1, 0x2d, 0xcd, 0x34, 0x60, 0x0b, 0x8d, 0xa5, 0x38, 0x06, 0xf6, 0xc2, 0xee, 0xa4, 0x66, 0x49,
	0x3b, 0x47, 0x78, 0x0b, 0xcb, 0x31, 0xd0, 0x20, 0x64, 0xf7, 0xa2, 0xaa, 0xa4, 0xff, 0x02, 0xfd,
	0x08, 0x98, 0x03, 0x0f, 0x1c, 0xc5, 0xd0, 0xeb, 0x1b, 0x45, 0x41, 0x84, 0xca, 0x0f, 0x2f, 0x94,
	0xd3, 0xd3, 0x1d, 0xb7, 0xb0, 0xf8, 0x3a, 0x23, 0x7f, 0x4c, 0x15, 0x6a, 0xf3, 0x33, 0xeb, 0x7b,
	0x58, 0xff, 0x71, 0x89, 0xde, 0x9d, 0x22, 0xa1, 0x86, 0x79, 0xfe, 0x9e, 0xaa, 0xda, 0x59, 0xd7,
	0xec, 0x16, 0x7d, 0x7e, 0x66, 0xbe, 0x85, 0xdd, 0x01, 0x56, 0x99, 0x3d, 0x51, 0x78, 0xe7, 0x91,
	0xf0, 0x01, 0x9a, 0x33, 0x33, 0x5c, 0xf7, 0xff, 0x0b, 0x6e, 0x37, 0xfd, 0x85, 0x3c, 0x7d, 0xf5,
	0x7c, 0x9d, 0xd6, 0x78, 0xf7, 0x19, 0x00, 0x00, 0xff, 0xff, 0x79, 0x3a, 0x3f, 0xa8, 0x57, 0x01,
	0x00, 0x00,
}
